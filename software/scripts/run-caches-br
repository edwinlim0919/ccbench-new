#!/usr/bin/bash
HOME_DIR=/home/centos/firesim
cd $HOME_DIR

# Initialize copy directory if it does not exist
COPY_DIR=${HOME_DIR}/caches-br-results
if [ ! -d "$COPY_DIR" ]; then
    mkdir $COPY_DIR
fi

# Clear copy directory if it is not empty
if [ ! -z "$(ls -A $COPY_DIR)" ]; then
    rm -r ${COPY_DIR}/*
fi

# Initialize separate directories for different configurations
mkdir ${COPY_DIR}/8-way-set-associative
mkdir ${COPY_DIR}/4-way-set-associative
mkdir ${COPY_DIR}/2-way-set-associative
mkdir ${COPY_DIR}/direct-mapped


# Runtime configuration parameters for LLC
LLC_settings=(
    "mm_llc_wayBits_0"
    "mm_llc_setBits_0"
    "mm_llc_blockBits_0"
    "mm_llc_activeMSHRs_0"
    "mm_llc_wayBits_1"
    "mm_llc_setBits_1"
    "mm_llc_blockBits_1"
    "mm_llc_activeMSHRs_1"
    "mm_llc_wayBits_2"
    "mm_llc_setBits_2"
    "mm_llc_blockBits_2"
    "mm_llc_activeMSHRs_2"
    "mm_llc_wayBits_3"
    "mm_llc_setBits_3"
    "mm_llc_blockBits_3"
    "mm_llc_activeMSHRs_3"
)

# 8-way set associative (default settings)
eight_way_set=(3 12 7 8 3 12 7 8 3 12 7 8 3 12 7 8)

# 4-way set associative
four_way_set=(2 13 7 8 2 13 7 8 2 13 7 8 2 13 7 8)

# 2-way set associative
two_way_set=(1 14 7 8 1 14 7 8 1 14 7 8 1 14 7 8)

# direct mapped
direct_mapped=(0 15 7 8 0 15 7 8 0 15 7 8 0 15 7 8)


# Kill any simulation that may be currently running
firesim kill

# Run sweep with default config
for i in ${!LLC_settings[@]}; do
    python3 change_conf.py fased_sweep_protomegaboom.conf ${LLC_settings[$i]} ${eight_way_set[$i]}
done
firesim infrasetup
firesim runworkload

RESULT_DIR=${HOME_DIR}/deploy/results-workload
RESULT_NAME=$(ls $RESULT_DIR -t | head -1)
cp ${RESULT_DIR}/${RESULT_NAME}/caches-br-caches/run_result.csv ${COPY_DIR}/8-way-set-associative/run_result.csv
cp ${RESULT_DIR}/${RESULT_NAME}/caches-br-caches/uartlog ${COPY_DIR}/8-way-set-associative/uartlog


# Run sweep with 4-way config
for i in ${!LLC_settings[@]}; do
    python3 change_conf.py fased_sweep_protomegaboom.conf ${LLC_settings[$i]} ${four_way_set[$i]}
done
firesim infrasetup
firesim runworkload

RESULT_NAME=$(ls $RESULT_DIR -t | head -1)
cp ${RESULT_DIR}/${RESULT_NAME}/caches-br-caches/run_result.csv ${COPY_DIR}/4-way-set-associative/run_result.csv
cp ${RESULT_DIR}/${RESULT_NAME}/caches-br-caches/uartlog ${COPY_DIR}/4-way-set-associative/uartlog


# Run sweep with 2-way set associative
for i in ${!LLC_settings[@]}; do
    python3 change_conf.py fased_sweep_protomegaboom.conf ${LLC_settings[$i]} ${two_way_set[$i]}
done
firesim infrasetup
firesim runworkload

RESULT_NAME=$(ls $RESULT_DIR -t | head -1)
cp ${RESULT_DIR}/${RESULT_NAME}/caches-br-caches/run_result.csv ${COPY_DIR}/2-way-set-associative/run_result.csv
cp ${RESULT_DIR}/${RESULT_NAME}/caches-br-caches/uartlog ${COPY_DIR}/2-way-set-associative/uartlog


# Run sweep with direct mapped
for i in ${!LLC_settings[@]}; do
    python3 change_conf.py fased_sweep_protomegaboom.conf ${LLC_settings[$i]} ${direct_mapped[$i]}
done
firesim infrasetup
firesim runworkload

RESULT_NAME=$(ls $RESULT_DIR -t | head -1)
cp ${RESULT_DIR}/${RESULT_NAME}/caches-br-caches/run_result.csv ${COPY_DIR}/direct-mapped/run_result.csv
cp ${RESULT_DIR}/${RESULT_NAME}/caches-br-caches/uartlog ${COPY_DIR}/direct-mapped/uartlog
